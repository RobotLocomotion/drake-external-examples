# SPDX-License-Identifier: MIT-0

load("@rules_python//python:defs.bzl", "py_binary", "py_test")

# Make a simple Python application.
py_binary(
    name = "simple_logging_example",
    srcs = ["simple_logging_example.py"],
    deps = [
        "@drake//bindings/pydrake",
    ],
)

# Check that third-party include paths work properly.
cc_test(
    name = "include_paths_test",
    srcs = ["include_paths_test.cc"],
    deps = [
        "@drake//:drake_shared_library",
    ],
)

# This ensures that downstream Bazel projects can use Drake's `find_resource`
# functionality without needing to resort to environment variables.
py_test(
    name = "find_resource_py_test",
    main = "find_resource_test.py",
    srcs = ["find_resource_test.py"],
    deps = [
        "@drake//bindings/pydrake",
    ],
)

cc_test(
    name = "find_resource_cc_test",
    srcs = ["find_resource_test.cc"],
    deps = [
        "@drake//:drake_shared_library",
    ],
    data = [
        # TODO(sloretz) want smaller scope visible target access to
        # @drake//examples:pendulum/Pendulum.urdf
        "@drake//bindings/pydrake",
    ]
)

sh_test(
    name = "simple_logging_example_test",
    size = "small",
    srcs = ["exec.sh"],
    args = ["$(location :simple_logging_example)"],
    data = [":simple_logging_example"],
)

py_test(
    name = "import_all_py_test",
    main = "import_all_test.py",
    srcs = ["import_all_test.py"],
    deps = [
        "@drake//bindings/pydrake",
    ],
)
