# SPDX-License-Identifier: MIT-0

# Default to an optimized build.
build --compilation_mode=opt

# Default build options.
build --strip=never

# Default test options.
build --test_output=errors
build --test_summary=terse

# Use C++20.
build --cxxopt=-std=c++20
build --host_cxxopt=-std=c++20

# https://github.com/bazelbuild/bazel/issues/1164
build --action_env=CCACHE_DISABLE=1

# Use eigen, fmt, spdlog from the host OS via pkg-config, rather than bzlmod.
# It's okay to remove this line if you'd rather use bzlmod. For details, see:
# https://github.com/RobotLocomotion/drake/blob/master/tools/flags/BUILD.bazel
build --@drake//tools/flags:public_repo_default=pkgconfig

# For Ubuntu builds, this flag can cut build times in half. For macOS builds,
# this flag might cause build errors. We suggest turning it on if and only if
# your project doesn't use macOS.
## build --force_pic=yes

# Drake supports the use of proprietary solvers for mathematical programs.
# See https://drake.mit.edu/bazel.html#proprietary-solvers for more info
# and details on how to set them up.
# They can be enabled for the build and tests as shown below.
# Gurobi
# build --define=WITH_GUROBI=ON
# test --test_env=GRB_LICENSE_FILE
# MOSEK
# build --define=WITH_MOSEK=ON
# test --test_env=MOSEKLM_LICENSE_FILE
# SNOPT
# build --define=WITH_SNOPT=ON
# test --test_env=SNOPT_PATH

# TODO(jwnimmer-tri) We should see if we can reuse more of Drake's
# customizations somehow.

# Try to import user-specific configuration local to workspace.
try-import %workspace%/user.bazelrc
